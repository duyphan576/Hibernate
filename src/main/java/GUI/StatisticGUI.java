/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BLL.StatisticBLL;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author duyph
 */
public class StatisticGUI extends javax.swing.JFrame {

    /**
     * Creates new form StatisticGUI
     */
    private StatisticBLL sta = new StatisticBLL();

    public StatisticGUI() throws SQLException {
        initComponents();
        listTopProduct();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Statistic");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setEnabled(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listTotalSale() throws SQLException {
        List<Object[]> list = sta.totalSale();
        DefaultTableModel model = convertTotalSale(list);
        jTable1.setModel(model);
    }

    private DefaultTableModel convertTotalSale(List<Object[]> list) {
        String[] colummNames = {"Year", "Month", "Total"};
        Object[][] data = new Object[list.size()][3];

        String a = "";
        for (int i = 0; i < list.size(); i++) {
            for (int j = 1; j < Arrays.toString(list.get(i)).length() - 1; j++) {
                a += Arrays.toString(list.get(i)).charAt(j);
            }
            a += ", ";
        }
        String[] part = a.split(", ");
        int c = 0;
        for (int i = 0; i < list.size(); i++) {
            if (c < part.length / 2) {
                for (int j = 0; c < part.length / 2; j++) {
                    data[i][j] = part[c];
                    c++;
                }
                System.out.println(c);
            } else {
                for (int j = 0; c < part.length; j++) {
                    data[i][j] = part[c];
                    c++;
                }
                System.out.println(c);
            }
        }
        DefaultTableModel model = new DefaultTableModel(data, colummNames);
        return model;
    }

    private void listTopProduct() throws SQLException {
        List<Object[]> list = sta.topProduct();
        DefaultTableModel model = convertTopProduct(list);
        jTable1.setModel(model);
    }

    private DefaultTableModel convertTopProduct(List<Object[]> list) {
        String[] colummNames = {"Product Name", "Quantity"};
        Object[][] data = new Object[list.size()][2];

        String a = "";
        for (int i = 0; i < list.size(); i++) {
            for (int j = 1; j < Arrays.toString(list.get(i)).length() - 1; j++) {
                a += Arrays.toString(list.get(i)).charAt(j);
            }
            a += ", ";
        }
        String[] part = a.split(", ");
        int c = 0;
        System.out.println(part.length);
        for (int i = 0; i < list.size(); i++) {
            if (c < part.length / 2) {
                for (int j = 0; j < part.length / 2; j++) {
                    data[i][j] = part[c];
                    c++;
                }
            } else {
                for (int j = 0; c < part.length; j++) {
                    data[i][j] = part[c];
                    c++;
                }
            }
        }
        DefaultTableModel model = new DefaultTableModel(data, colummNames);
        return model;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatisticGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatisticGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatisticGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatisticGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new StatisticGUI().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(StatisticGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
